#!/bin/bash 

set -eo pipefail

__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

source $__dir/create-root-ca
source $__dir/create-self-signed-certificate

watcher_initialize() {
    docker exec consul kvstore initialize
}

watcher_refresh_certificates() {
    docker exec consul kvstore refresh-certificates

    echo " ---> restart traefik"
    docker restart traefik 2> /dev/null
}

generate_root_certificate
watcher_initialize
watcher_refresh_certificates

# listen to started containers
echo "[info] listen for started containers"

# @todo find a way to handle SIGTERM
docker events --filter 'event=start' | while read event
do
    CONTAINER_ID=$(echo $event | awk '{ print $4 }')
    CONTAINER_NAME="$(docker inspect --format='{{ .Name }}' $CONTAINER_ID | cut -c 2-)"
    SSL_DOMAIN=$(docker inspect --format='{{ index .Config.Labels "ssl.domain" }}' $CONTAINER_ID)
    SSL_DOMAIN_ALT_NAMES=$(docker inspect --format='{{ index .Config.Labels "ssl.domain.alt_names" }}' $CONTAINER_ID)

    if [ -n "$SSL_DOMAIN" ];then
        # if no domain alternate name if provided, assume ssl domain
        if [ ! -n "SSL_DOMAIN_ALT_NAMES" ];then
            SSL_DOMAIN_ALT_NAMES=$SSL_DOMAIN
        fi

        create_self_signed_certificate "$CONTAINER_NAME" "$SSL_DOMAIN" "$SSL_DOMAIN_ALT_NAMES"
        watcher_refresh_certificates
    fi
done